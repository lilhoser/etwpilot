<UserControl x:Class="EtwPilot.View.SessionFormView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Fluent="urn:fluent-ribbon"
             xmlns:vm="clr-namespace:EtwPilot.ViewModel"
             xmlns:view="clr-namespace:EtwPilot.View"
             mc:Ignorable="d"
             Name="SessionFormViewControl"
             DataContext="{StaticResource g_MainWindowViewModel}"
             Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <!-- static provider filter form view -->
        <view:ProviderFilterFormView x:Key="StaticProviderFilterFormView"/>
        <DataTemplate DataType="{x:Type vm:ProviderFilterFormViewModel}">
            <ContentControl Content="{StaticResource StaticProviderFilterFormView}" />
        </DataTemplate>
        
        <!-- Template for dynamic "add provider to trace session" tabs. Some properties are set in code-behind. -->
        <Style x:Key="ProviderFilterContextTabStyle" TargetType="{x:Type TabItem}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Name="ProviderFilterContextTabText"/>
                            <Separator Width="5"/>
                            <Button Name="ProviderFilterContextTabCloseButton"
                            Content="{StaticResource red_x}"
                            BorderThickness="0"
                            Margin="0"
                            Padding="0"
                            Background="Transparent"/>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Background="AliceBlue" Margin="5">
            <GroupBox.Header>
                <TextBlock FontWeight="Bold" Text="Session Information"/>
            </GroupBox.Header>
            <StackPanel Orientation="Vertical" Margin="5">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Width="150">Name:</Label>
                    <TextBox Name="SessionName"
                            Width="350" 
                            Validation.ErrorTemplate="{DynamicResource ValidationErrorTemplate}"
                            Text="{Binding m_SessionFormViewModel.Name, Mode=TwoWay, ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=LostFocus}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Width="150">Enabled Providers:</Label>
                    <ComboBox ItemsSource="{Binding m_ProviderViewModel.Providers}"
                              Name="SelectedProvider"
                              SelectedIndex="0"/>
                    <Separator Opacity="0" Width="5"/>
                    <Button Name="AddProviderFilterButton"
                            Click="AddProviderFilterButton_Click" Width="75"
                            Validation.ErrorTemplate="{DynamicResource ValidationErrorTemplate}"
                            Tag="{Binding m_SessionFormViewModel.NumProviderFilterForms, ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}">Add
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <CheckBox Name="RealTimeCheckbox" 
                            Padding="5"
                            IsChecked="{Binding m_SessionFormViewModel.IsRealTime, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            />
                    <TextBlock TextWrapping="Wrap" Text="Real-time session" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Width="150">Save log:</Label>
                    <TextBox Name="SaveTraceLogLocationTextbox" 
                         Width="350"
                         Validation.ErrorTemplate="{DynamicResource ValidationErrorTemplate}"
                         Text="{Binding m_SessionFormViewModel.LogLocation, Mode=TwoWay,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=LostFocus}"
                             >
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=RealTimeCheckbox}"
                                                 Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Separator Opacity="0" Width="5"/>
                    <Button Name="BrowseLogLocationButton"
                            Click="BrowseLogLocationButton_Click"
                            Width="75">
                        <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=RealTimeCheckbox}"
                                             Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        </Button.Style>
                        Browse...
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Width="150">Stop condition:</Label>
                    <StackPanel Width="80">
                        <RadioButton GroupName="StopConditionGroup" 
                                     Content="MB" 
                                     Validation.ErrorTemplate="{x:Null}"
                                     Validation.ValidationAdornerSite="{Binding ElementName=StopConditionTextbox}"
                                     IsChecked="{Binding Path=m_SessionFormViewModel.StopCondition, 
                            Mode=TwoWay,Converter={StaticResource StopConditionToBool}, ConverterParameter=SizeMb,ValidatesOnNotifyDataErrors=True}"
                                     />
                        <RadioButton GroupName="StopConditionGroup"
                                     Content="Seconds"
                                     Validation.ErrorTemplate="{x:Null}"
                                     Validation.ValidationAdornerSite="{Binding ElementName=StopConditionTextbox}"
                                     IsChecked="{Binding Path=m_SessionFormViewModel.StopCondition, 
Mode=TwoWay,Converter={StaticResource StopConditionToBool}, ConverterParameter=TimeSec,ValidatesOnNotifyDataErrors=True}"/>
                    </StackPanel>
                    <TextBox Name="StopConditionTextbox"
                             Width="30" 
                             Validation.ErrorTemplate="{DynamicResource ValidationErrorTemplate}"
                             Text="{Binding m_SessionFormViewModel.StopConditionValue,
                            Mode=TwoWay, Converter={StaticResource IntegerToString},ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=LostFocus}"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <ScrollViewer Height="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="1">
            <GroupBox Grid.Row="1" Background="AliceBlue" Margin="5">
                <GroupBox.Header>
                    <TextBlock FontWeight="Bold" Text="Provider Filters"/>
                </GroupBox.Header>
                <TabControl Name="ProviderFiltersTabControl"
                            SelectionChanged="ProviderFiltersTabControl_SelectionChanged"/>
                <!-- note: tab pages are added dynamically by clicking the AddProvider
                button from the parent form (SessionFormView.xaml). As part of the tab
                creation process, its Content property is set to the corresponding instance
                of ProviderFilterFormViewModel, which triggers the DataTemplate defined in
                the resources of this control (top of this page). This trigger loads the
                singleton ProviderFilterFormView instance, bound to the view model of the
                newly created tab. -->
            </GroupBox>
        </ScrollViewer>
    </Grid>
</UserControl>